/*! satnet-ng 09-06-2015 rtubiopa@calpoly.edu Apache-2.0*/
var toastModule=angular.module("toastModule",["ngMaterial"]);toastModule.controller("ErrorToastCtrl",["$scope","$mdToast","$mdDialog","error",function(a,b,c,d){a.message=d.message,a.hide=function(){b.hide()}}]),angular.module("splashDirective",[]).directive("mAppLoading",["$animate",function(a){"use strict";var b=function(b,c,d){a.leave(c.children().eq(1)).then(function(){c.remove(),b=c=d=null})};return{link:b,restrict:"C"}}]),angular.module("snAboutDirective",["ngMaterial"]).controller("snAboutDlgCtrl",["$scope","$mdDialog",function(a,b){a.closeDialog=function(){b.hide()}}]).controller("snAboutCtrl",["$scope","$mdDialog",function(a,b){a.openSnAbout=function(){b.show({templateUrl:"common/templates/sn-about-dialog.html"})}}]).directive("snAbout",function(){return{restrict:"E",templateUrl:"common/templates/sn-about.html"}}),angular.module("snMapDirective",["leaflet-directive","snMapServices"]).controller("SelectMapCtrl",["$scope","mapServices",function(a,b){a.center={},a.markers={},a.init=function(){b.createAddGsMap(a)}}]).controller("MapCtrl",["$log","$scope","mapServices","leafletData","leafletEvents","ZOOM",function(a,b,c,d,e,f){b.center={zoom:f},b.markers={},b.layers={baselayers:{},overlays:{}},b.events={map:{enable:["click"],logic:"emit"}},b.lastEvent="",b.registerMapEvents=function(){b.$on("leafletDirectiveMap.click",function(a){b.lastEvent=a,console.log("CLICK ON THE MAP!")})},b.init=function(){b.map=c.createTerminatorMap(!0),c.autocenterMap(b,f),b.registerMapEvents()}}]).directive("selectMap",function(){return{restrict:"E",templateUrl:"common/templates/select-map.html"}}).directive("snMap",function(){return{restrict:"E",templateUrl:"common/templates/sn-map.html"}}),angular.module("snMapServices",["satnetServices","leaflet-directive"]).constant("T_OPACITY",.125).constant("LAT",37.7833).constant("LNG",-122.4167).constant("MIN_ZOOM",2).constant("MAX_ZOOM",12).constant("ZOOM",7).constant("ZOOM_SELECT",8).service("mapServices",["$q","leafletData","satnetRPC","MIN_ZOOM","MAX_ZOOM","ZOOM","T_OPACITY","ZOOM_SELECT",function(a,b,c,d,e,f,g,h){"use strict";this.getMainMap=function(){return b.getMap("mainMap").then(function(a){return{map:a}})},this._updateTerminator=function(a){var b=L.terminator();return a.setLatLngs(b.getLatLngs()),a.redraw(),a},this.createTerminatorMap=function(){var a=this._updateTerminator;return this.getMainMap().then(function(b){var c=L.terminator({fillOpacity:g});return c.addTo(b.map),b.terminator=c,setInterval(function(){a(c)},500),b})},this.createAddGsMap=function(a){var b=this;return c.getUserLocation().then(function(c){b.configureAddGsMap(a,c.latitude,c.longitude)})},this.configureAddGsMap=function(a,b,c){a.center={lat:b,lng:c,zoom:h},a.markers={gs:{lat:b,lng:c,focus:!0,draggable:!0,label:{message:"Drag me!",options:{noHide:!0}}}}},this.autocenterMap=function(a,b){var d=this;return c.getUserLocation().then(function(c){d.configureMap(a,c.latitude,c.longitude,b)})},this.centerAtGs=function(a,b,d){var e=this;return c.rCall("gs.get",[b]).then(function(b){return e.configureMap(a,b.groundstation_latlon[0],b.groundstation_latlon[1],d),b})},this.configureMap=function(a,b,c,d){a.center={lat:b,lng:c,zoom:d},a.markers={gs:{lat:b,lng:c,focus:!0,draggable:!1,icon:{iconUrl:"/images/user.png",iconSize:[15,15]},label:{message:"Drag me!",options:{noHide:!0}}}},a.layers.baselayers=this.getBaseLayers(),a.layers.overlays=this.getOverlays()},this.getBaseLayers=function(){return{esri_baselayer:{name:"ESRI Base Layer",type:"xyz",url:"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",layerOptions:{noWrap:!1,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ"}},osm_baselayer:{name:"OSM Base Layer",type:"xyz",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",layerOptions:{noWrap:!1,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}}}},this.getOSMBaseLayer=function(){return{osm_baselayer:{name:"OSM Base Layer",type:"xyz",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}}}},this.getOverlays=function(){return{oms_admin_overlay:{name:"Administrative Boundaries",type:"xyz",url:"http://openmapsurfer.uni-hd.de/tiles/adminb/x={x}&y={y}&z={z}",visible:!0,layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'Imagery from <a href="http://giscience.uni-hd.de/">GIScience Research Group @ University of Heidelberg</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},hydda_roads_labels_overlay:{name:"Roads and Labels",type:"xyz",url:"http://{s}.tile.openstreetmap.se/hydda/roads_and_labels/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'Tiles courtesy of <a href="http://openstreetmap.se/" target="_blank">OpenStreetMap Sweden</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},stamen_toner_labels_overlay:{name:"Labels",type:"xyz",url:"http://{s}.tile.stamen.com/toner-labels/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,subdomains:"abcd",attribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},owm_rain_overlay:{name:"Rain",type:"xyz",url:"http://{s}.tile.openweathermap.org/map/rain/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,opacity:.325,attribution:'Map data &copy; <a href="http://openweathermap.org">OpenWeatherMap</a>'}},owm_temperature_overlay:{name:"Temperature",type:"xyz",url:"http://{s}.tile.openweathermap.org/map/temp/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'Map data &copy; <a href="http://openweathermap.org">OpenWeatherMap</a>'}}}},this.asString=function(a){return'mapInfo = {"center": '+JSON.stringify(a.center)+', "terminator": '+a.terminator+', "map": '+a.map+"}"}}]),angular.module("satnetServices",["jsonrpc"]).constant("TEST_PORT",8e3).service("satnetRPC",["jsonrpc","$location","$log","$q","$http","TEST_PORT",function(a,b,c,d,e,f){"use strict";this._getSatNetAddress=function(){var a=b.protocol(),c=b.host(),d=b.port();return"localhost"===c&&(d=f),""+a+"://"+c+":"+d},this._getRPCAddress=function(){return this._getSatNetAddress()+"/jrpc/"};var g=this._getRPCAddress();this._configuration=a.newService("configuration",g),this._simulation=a.newService("simulation",g),this._leop=a.newService("leop",g),this._network=a.newService("network",g),this._services={"gs.list":this._configuration.createMethod("gs.list"),"gs.add":this._configuration.createMethod("gs.create"),"gs.get":this._configuration.createMethod("gs.getConfiguration"),"gs.update":this._configuration.createMethod("gs.setConfiguration"),"gs.delete":this._configuration.createMethod("gs.delete"),"sc.list":this._configuration.createMethod("sc.list"),"sc.add":this._configuration.createMethod("sc.create"),"sc.get":this._configuration.createMethod("sc.getConfiguration"),"sc.update":this._configuration.createMethod("sc.setConfiguration"),"sc.delete":this._configuration.createMethod("sc.delete"),"user.getLocation":this._configuration.createMethod("user.getLocation"),"tle.celestrak.getSections":this._configuration.createMethod("tle.celestrak.getSections"),"tle.celestrak.getResource":this._configuration.createMethod("tle.celestrak.getResource"),"tle.celestrak.getTle":this._configuration.createMethod("tle.celestrak.getTle"),"sc.getGroundtrack":this._simulation.createMethod("spacecraft.getGroundtrack"),"sc.getPasses":this._simulation.createMethod("spacecraft.getPasses"),"gs.getPasses":this._simulation.createMethod("groundstation.getPasses"),"leop.getCfg":this._leop.createMethod("getConfiguration"),"leop.setCfg":this._leop.createMethod("setConfiguration"),"leop.getPasses":this._leop.createMethod("getPasses"),"leop.gs.list":this._leop.createMethod("gs.list"),"leop.sc.list":this._leop.createMethod("sc.list"),"leop.gs.add":this._leop.createMethod("gs.add"),"leop.gs.remove":this._leop.createMethod("gs.remove"),"leop.ufo.add":this._leop.createMethod("launch.addUnknown"),"leop.ufo.remove":this._leop.createMethod("launch.removeUnknown"),"leop.ufo.identify":this._leop.createMethod("launch.identify"),"leop.ufo.forget":this._leop.createMethod("launch.forget"),"leop.ufo.update":this._leop.createMethod("launch.update"),"leop.getMessages":this._leop.createMethod("getMessages"),"net.alive":this._network.createMethod("keepAlive")},this._generateError=function(a,b,d,e){var f="[satnetRPC] Error invoking = <"+a+">, with params = <"+JSON.stringify(b)+">, code = <"+JSON.stringify(d)+">, description = <"+JSON.stringify(e)+">";throw c.warn(f),f},this.rCall=function(a,b){var d=this._generateError;if(this._services.hasOwnProperty(a)===!1)throw"[satnetRPC] service not found, id = <"+a+">";return c.info("[satnetRPC] Invoked service = <"+a+">, params = "+JSON.stringify(b)),this._services[a](b).then(function(c){return"JSONRPCError"===c.data.name&&d(a,b,c.code,c.message),c.data},function(c){d(a,b,"NONE",c)})},this.getUserLocation=function(){var a=this._getSatNetAddress()+"/configuration/user/geoip";return e.get(a).then(function(a){return c.info("[satnet] user@("+JSON.stringify(a.data)+")"),{latitude:parseFloat(a.data.latitude),longitude:parseFloat(a.data.longitude)}})},this.getServerLocation=function(a){return e.post("/configuration/hostname/geoip",{hostname:a}).then(function(b){return c.info("[satnet] server name = "+a+"@("+JSON.stringify(b.data)+")"),{latitude:parseFloat(b.data.latitude),longitude:parseFloat(b.data.longitude)}})},this.readSCCfg=function(a){var b={},c=[this.rCall("sc.get",[a]),this.rCall("sc.getGroundtrack",[a]),this.rCall("tle.celestrak.getTle",[a])];return d.all(c).then(function(a){return b=a[0],b.groundtrack=a[1],b.tle=a[2],angular.extend(b,a[0]),angular.extend(b.groundtrack,a[1]),angular.extend(b.tle,a[2]),b})},this.readAllLEOPGS=function(a){var b=this;return this.rCall("leop.gs.list",[a]).then(function(a){var c=[];return angular.forEach(a.leop_gs_available,function(a){c.push(b.rCall("gs.get",[a]))}),angular.forEach(a.leop_gs_inuse,function(a){c.push(b.rCall("gs.get",[a]))}),d.all(c).then(function(b){var c,d,e,f=[],g=[];for(c=0;c<b.length;c+=1)d=b[c],e=d.groundstation_id,a.leop_gs_available.indexOf(e)>=0?f.push(d):g.push(d);return{leop_gs_available:f,leop_gs_inuse:g}})})}}]),angular.module("pushServices",["pusher-angular"]),angular.module("pushServices").service("satnetPush",["$log","$pusher",function(a,b){"use strict";this._API_KEY="79bee37791b6c60f3e56",this._client=null,this._service=null,this.LEOP_DOWNLINK_CHANNEL="leop.downlink.ch",this.EVENTS_CHANNEL="configuration.events.ch",this.NETWORK_EVENTS_CHANNEL="network.events.ch",this.SIMULATION_CHANNEL="simulation.events.ch",this.LEOP_CHANNEL="leop.events.ch",this.KEEP_ALIVE="keep_alive",this.FRAME_EVENT="frameEv",this.GS_ADDED_EVENT="gsAddedEv",this.GS_REMOVED_EVENT="gsRemovedEv",this.GS_UPDATED_EVENT="gsUpdatedEv",this.PASSES_UPDATED_EVENT="passesUpdatedEv",this.GT_UPDATED_EVENT="groundtrackUpdatedEv",this.LEOP_GSS_UPDATED_EVENT="leopGSsUpdatedEv",this.LEOP_GS_ASSIGNED_EVENT="leopGSAssignedEv",this.LEOP_GS_RELEASED_EVENT="leopGSReleasedEv",this.LEOP_UPDATED_EVENT="leopUpdatedEv",this.LEOP_UFO_IDENTIFIED_EVENT="leopUFOIdentifiedEv",this.LEOP_UFO_FORGOTTEN_EVENT="leopUFOForgottenEv",this.LEOP_SC_UPDATED_EVENT="leopSCUpdatedEv",this._channel_names=[this.LEOP_DOWNLINK_CHANNEL,this.EVENTS_CHANNEL,this.SIMULATION_CHANNEL,this.NETWORK_EVENTS_CHANNEL,this.LEOP_CHANNEL],this._initData=function(){this._client=new Pusher(this._API_KEY,{encrypted:!0}),this._service=b(this._client),this._service.connection.bind("state_change",this._logConnection),a.info("[push] pusher.com service initialized!"),this._subscribeChannels()},this._logConnection=function(b){a.warn("[push] State connection change, states = "+JSON.stringify(b))},this._subscribeChannels=function(){var b=this;angular.forEach(this._channel_names,function(c){b._service.subscribe(c),a.info("[push] Subscribed to channel <"+c+">")})},this.bind=function(a,b,c){if(!this._service.allChannels().hasOwnProperty(a))throw"Not subscribed to this channel, name = <"+a+">";this._service.channel(a).bind(b,c)},this.bindFrameReceived=function(a){this.bind(this.LEOP_DOWNLINK_CHANNEL,this.FRAME_EVENT,a,this)},this._initData()}]);var gsCtrlModule=angular.module("gsControllers",["ngMaterial","toastModule"]);gsCtrlModule.controller("GsListCtrl",["$log","$scope","$mdDialog","$mdToast","satnetRPC",function(a,b,c,d,e){b.groundStations=[],b.addGsMenu=function(){c.hide(),c.show({templateUrl:"operations/templates/gsadd-dialog.html"})},b.refresh=function(){e.rCall("gs.list",[]).then(function(a){null!==a&&(b.groundStations=a.slice(0))})["catch"](function(b){a.error("[satnet] ERROR, cause = "+JSON.stringify(b)),d.show({controller:"ErrorToastCtrl",templateUrl:"common/templates/sn-error-toast.html",locals:{error:{message:"Network Error"}},hideDelay:5e3,position:"bottom"}),c.hide()})},b.init=function(){b.refresh()}}]),gsCtrlModule.controller("GsAddCtrl",["$log","$scope","$mdDialog","$mdToast","satnetRPC",function(a,b,c,d,e){b.configuration={},b.add=function(){},b.cancel=function(){c.hide(),c.show({templateUrl:"operations/templates/gslist-dialog.html"})}}]);var opsMenuCtrlModule=angular.module("operationsMenuControllers",["ngMaterial"]);opsMenuCtrlModule.controller("OperationsMenuCtrl",["$scope","$mdSidenav","$mdDialog",function(a,b,c){a.close=function(){b("menu").close()},a.showGsMenu=function(){c.show({templateUrl:"operations/templates/gslist-dialog.html"})}}]),angular.module("operationsDirective",["ngMaterial","ngAnimate","leaflet-directive","splashDirective","snAboutDirective","snMapDirective","operationsMenuControllers","gsControllers"]).config(function(a){a.theme("default").primaryPalette("blue-grey").accentPalette("grey")}).controller("OperationsAppCtrl",function(a,b){a.toggleMenu=function(){b("menu").toggle()}}).directive("operationsApp",function(){return{restrict:"E",templateUrl:"operations/templates/operations-app.html"}});