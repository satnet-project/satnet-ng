/*! satnet-ng 16-05-2015 rtubiopa@calpoly.edu Apache v2*/
angular.module("splashDirective",[]).directive("mAppLoading",["$animate",function(a){"use strict";var b=function(b,c,d){a.leave(c.children().eq(1)).then(function(){c.remove(),b=c=d=null})};return{link:b,restrict:"C"}}]),angular.module("snAboutDirective",["ngMaterial"]).controller("snAboutDlgCtrl",["$scope","$mdDialog",function(a,b){"use strict";a.closeDialog=function(){b.hide()}}]).controller("snAboutCtrl",["$scope","$mdDialog",function(a,b){"use strict";a.openSnAbout=function(){b.show({templateUrl:"common/templates/sn-about-dialog.html"})}}]).directive("snAbout",function(){"use strict";return{restrict:"E",templateUrl:"common/templates/sn-about.html"}}),angular.module("snMapDirective",["leaflet-directive","snMapServices"]).controller("MapCtrl",["$scope","mapServices",function(a,b){"use strict";a.init=function(){b.createMainMap()},a.init()}]).directive("snMap",function(){"use strict";return{restrict:"E",templateUrl:"common/templates/sn-map.html"}}),angular.module("snMapServices",["satnetServices","leaflet-directive"]).constant("T_OPACITY",.125).constant("LAT",37.7833).constant("LNG",-122.4167).constant("MIN_ZOOM",2).constant("MAX_ZOOM",12).constant("ZOOM",7).service("mapServices",["$q","leafletData","satnetRPC","MIN_ZOOM","MAX_ZOOM","ZOOM","T_OPACITY",function(a,b,c,d,e,f,g){"use strict";this.getMainMap=function(){return b.getMap("mainMap").then(function(a){return{map:a}})},this._updateTerminator=function(a){var b=L.terminator();return a.setLatLngs(b.getLatLngs()),a.redraw(),a},this._createTerminatorMap=function(){var a=this._updateTerminator;return this.getMainMap().then(function(b){var c=L.terminator({fillOpacity:g});return c.addTo(b.map),b.terminator=c,setInterval(function(){a(c)},500),b})},this.createMainMap=function(b){var d=[];return d.push(b?this._createTerminatorMap():this.getMainMap()),d.push(c.getUserLocation()),a.all(d).then(function(a){var b=new L.LatLng(a[1].latitude,a[1].longitude),c=a[0].map;return c.setView(b,f),{map:a[0].map,terminator:a[0].terminator,center:{lat:a[1].latitude,lng:a[1].longitude}}})},this.autocenterMap=function(a,b){var d=this;return c.getUserLocation().then(function(c){d.centerMap(a,c.latitude,c.longitude,b)})},this.centerAtGs=function(a,b,d){var e=this;return c.rCall("gs.get",[b]).then(function(b){return e.centerMap(a,b.groundstation_latlon[0],b.groundstation_latlon[1],d),b})},this.centerMap=function(a,b,c,d){a.center={lat:b,lng:c,zoom:d},a.markers={gs:{lat:b,lng:c,focus:!0,draggable:!0,label:{message:"Drag me!",options:{noHide:!0}}}},a.layers={baselayers:this.getOSMBaseLayer()}},this.getBaseLayers=function(){return{osm_baselayer:{name:"OSM Base Layer",type:"xyz",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",layerOptions:{noWrap:!1,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},esri_baselayer:{name:"ESRI Base Layer",type:"xyz",url:"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",layerOptions:{noWrap:!1,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ"}}}},this.getOSMBaseLayer=function(){return{osm_baselayer:{name:"OSM Base Layer",type:"xyz",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}}}},this.getOverlays=function(){return{oms_admin_overlay:{name:"Administrative Boundaries",type:"xyz",url:"http://openmapsurfer.uni-hd.de/tiles/adminb/x={x}&y={y}&z={z}",visible:!0,layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'Imagery from <a href="http://giscience.uni-hd.de/">GIScience Research Group @ University of Heidelberg</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},hydda_roads_labels_overlay:{name:"Roads and Labels",type:"xyz",url:"http://{s}.tile.openstreetmap.se/hydda/roads_and_labels/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'Tiles courtesy of <a href="http://openstreetmap.se/" target="_blank">OpenStreetMap Sweden</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},stamen_toner_labels_overlay:{name:"Labels",type:"xyz",url:"http://{s}.tile.stamen.com/toner-labels/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,subdomains:"abcd",attribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}},owm_rain_overlay:{name:"Rain",type:"xyz",url:"http://{s}.tile.openweathermap.org/map/rain/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,opacity:.325,attribution:'Map data &copy; <a href="http://openweathermap.org">OpenWeatherMap</a>'}},owm_temperature_overlay:{name:"Temperature",type:"xyz",url:"http://{s}.tile.openweathermap.org/map/temp/{z}/{x}/{y}.png",layerOptions:{noWrap:!0,continuousWorld:!1,minZoom:d,maxZoom:e,attribution:'Map data &copy; <a href="http://openweathermap.org">OpenWeatherMap</a>'}}}},this.asString=function(a){return'mapInfo = {"center": '+JSON.stringify(a.center)+', "terminator": '+a.terminator+', "map": '+a.map+"}"}}]),angular.module("satnetServices",["jsonrpc"]).service("satnetRPC",["jsonrpc","$location","$log","$q","$http",function(a,b,c,d,e){"use strict";var f=b.protocol()+"://"+b.host()+":"+b.port()+"/jrpc/";this._configuration=a.newService("configuration",f),this._simulation=a.newService("simulation",f),this._leop=a.newService("leop",f),this._network=a.newService("network",f),this._services={"gs.list":this._configuration.createMethod("gs.list"),"gs.add":this._configuration.createMethod("gs.create"),"gs.get":this._configuration.createMethod("gs.getConfiguration"),"gs.update":this._configuration.createMethod("gs.setConfiguration"),"gs.delete":this._configuration.createMethod("gs.delete"),"sc.list":this._configuration.createMethod("sc.list"),"sc.add":this._configuration.createMethod("sc.create"),"sc.get":this._configuration.createMethod("sc.getConfiguration"),"sc.update":this._configuration.createMethod("sc.setConfiguration"),"sc.delete":this._configuration.createMethod("sc.delete"),"user.getLocation":this._configuration.createMethod("user.getLocation"),"tle.celestrak.getSections":this._configuration.createMethod("tle.celestrak.getSections"),"tle.celestrak.getResource":this._configuration.createMethod("tle.celestrak.getResource"),"tle.celestrak.getTle":this._configuration.createMethod("tle.celestrak.getTle"),"sc.getGroundtrack":this._simulation.createMethod("spacecraft.getGroundtrack"),"sc.getPasses":this._simulation.createMethod("spacecraft.getPasses"),"gs.getPasses":this._simulation.createMethod("groundstation.getPasses"),"leop.getCfg":this._leop.createMethod("getConfiguration"),"leop.setCfg":this._leop.createMethod("setConfiguration"),"leop.getPasses":this._leop.createMethod("getPasses"),"leop.gs.list":this._leop.createMethod("gs.list"),"leop.sc.list":this._leop.createMethod("sc.list"),"leop.gs.add":this._leop.createMethod("gs.add"),"leop.gs.remove":this._leop.createMethod("gs.remove"),"leop.ufo.add":this._leop.createMethod("launch.addUnknown"),"leop.ufo.remove":this._leop.createMethod("launch.removeUnknown"),"leop.ufo.identify":this._leop.createMethod("launch.identify"),"leop.ufo.forget":this._leop.createMethod("launch.forget"),"leop.ufo.update":this._leop.createMethod("launch.update"),"leop.getMessages":this._leop.createMethod("getMessages"),"net.alive":this._network.createMethod("keepAlive")},this.rCall=function(a,b){if(this._services.hasOwnProperty(a)===!1)throw"[satnetRPC] service not found, id = <"+a+">";return c.info("[satnetRPC] Invoked service = <"+a+">, params = "+JSON.stringify(b)),this._services[a](b).then(function(a){return a.data},function(d){var e="[satnetRPC] Error invoking = <"+a+">, with params = <"+JSON.stringify(b)+">, description = <"+JSON.stringify(d)+">";throw c.warn(e),e})},this.getUserLocation=function(){return e.get("/configuration/user/geoip").then(function(a){return c.info("[satnet] user@("+JSON.stringify(a.data)+")"),{latitude:parseFloat(a.data.latitude),longitude:parseFloat(a.data.longitude)}})},this.getServerLocation=function(a){return e.post("/configuration/hostname/geoip",{hostname:a}).then(function(b){return c.info("[satnet] server name = "+a+"@("+JSON.stringify(b.data)+")"),{latitude:parseFloat(b.data.latitude),longitude:parseFloat(b.data.longitude)}})},this.readSCCfg=function(a){var b={},c=[this.rCall("sc.get",[a]),this.rCall("sc.getGroundtrack",[a]),this.rCall("tle.celestrak.getTle",[a])];return d.all(c).then(function(a){return b=a[0],b.groundtrack=a[1],b.tle=a[2],angular.extend(b,a[0]),angular.extend(b.groundtrack,a[1]),angular.extend(b.tle,a[2]),b})},this.readAllLEOPGS=function(a){var b=this;return this.rCall("leop.gs.list",[a]).then(function(a){var c=[];return angular.forEach(a.leop_gs_available,function(a){c.push(b.rCall("gs.get",[a]))}),angular.forEach(a.leop_gs_inuse,function(a){c.push(b.rCall("gs.get",[a]))}),d.all(c).then(function(b){var c,d,e,f=[],g=[];for(c=0;c<b.length;c+=1)d=b[c],e=d.groundstation_id,a.leop_gs_available.indexOf(e)>=0?f.push(d):g.push(d);return{leop_gs_available:f,leop_gs_inuse:g}})})}}]),angular.module("operationsDirective",["ngMaterial","ngAnimate","leaflet-directive","splashDirective","snAboutDirective","snMapDirective","operationsMenuControllers"]).config(function(a){a.theme("default").primaryPalette("blue-grey").accentPalette("grey")}).controller("OperationsAppCtrl",function(a,b){"use strict";a.toggleMenu=function(){b("menu").toggle()}}).directive("operationsApp",function(){"use strict";return{restrict:"E",templateUrl:"operations/templates/operations-app.html"}});var opsMenuCtrlModule=angular.module("operationsMenuControllers",["ngMaterial"]);opsMenuCtrlModule.controller("OperationsMenuCtrl",["$scope","$mdSidenav",function(a,b){a.close=function(){b("menu").close()},a.groundStations=function(){}}]);